{"version":3,"sources":["reducers/auth.js","reducers/post.js","reducers/subscription.js","reducers/user.js","reducers/index.js","actions/types.js","store.js","utils/setAuthToken.js","actions/auth.js","types.js","components/shared/PrivateRoute.js","components/layout/Header.js","components/layout/Footer.js","components/UI/input/input.js","components/auth/Login.js","components/auth/Register.js","actions/post.js","components/shared/PostForm.js","components/shared/Post/Like.js","components/shared/ProfileImage.js","utils/index.js","components/shared/Post/Post.js","components/shared/Post/index.js","components/shared/Loader/index.js","components/shared/Loader/Loader.js","components/shared/Posts.js","components/all-posts/AllPosts.js","components/single-post/Comment.js","components/single-post/CommentForm.js","components/single-post/SinglePost.js","actions/user.js","actions/subscription.js","components/user-profile/Subscription.js","components/user-profile/UserProifle.js","components/feed/Feed.js","components/not-found/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["initialState","isAuthenticated","user","posts","totalCount","post","isLoading","subscriptions","users","combineReducers","auth","state","arguments","length","undefined","action","type","Object","objectSpread","keys","payload","concat","toConsumableArray","map","p","_id","filter","_action$payload","id","body","postByIndex","findIndex","newPost","slice","subscription","s","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","setAuthToken","token","axios","defaults","headers","common","logout","dispatch","localStorage","removeItem","setCurrentUser","UserTypes","PropTypes","shape","bool","isRequired","email","string","exp","number","iat","name","createdDate","__v","connect","comments","array","likes","oneOfType","object","_ref","Component","component","restProps","objectWithoutProperties","react_default","a","createElement","react_router","assign","render","props","to","links","_props$auth","className","href","role","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","react_router_dom","onClick","event","preventDefault","Fragment","data-target","aria-controls","aria-label","Footer","Date","getFullYear","Input","Login","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","setState","defineProperty","target","value","onSubmit","login","password","nextProps","history","push","input","placeholder","pattern","required","userData","then","res","data","setItem","decoded","jwtDecode","Register","register","clearPosts","setPostLoading","PostForm","onChangeBody","create","react_quill_lib_default","theme","modules","toolbar","React","Like","onLikeClick","_this$props","postId","TYPE","existedLike","find","like","removeLike","createLike","likeId","delete","ProfileImage","_ref$width","width","Math","floor","random","toString","src","md5","alt","removeInjection","text","replace","Post","onDelete","window","confirm","remove","onChangePost","prevState","isChange","onCheckInjection","onSubmitPost","update","newPostText","onChangeInput","prevProps","refs","innerHTML","_this$props2","_this$state","isAuthAndOwn","date","toDateString","ref","Post_Like","put","Loader","Posts","onPageChange","activePage","getAll","getQueryParams","skip","limit","queryParams","_this$props$post","shared_Loader","shared_Post","key","Pagination_default","itemsCountPerPage","totalItemsCount","itemClass","linkClass","params","get","catch","AllPosts","shared_PostForm","shared_Posts","Comment","_this$prors","prors","removeComment","comment","commentId","CommentForm","createComment","SinglePost","getPostById","match","console","log","single_post_CommentForm","c","single_post_Comment","setUserLoading","setSubscriptionLoading","Subscription","onSubClick","userId","existedSub","subscriber","profile","_this$props$subscript","withRouter","UserProfile","getUserById","_this$props$user","user_profile_Subscription","Feed","getAllSubscriptions","join","NotFound","access_token","store","currentTime","now","location","App","es","layout_Header","path","exact","shared_PrivateRoute","Boolean","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.89fcf264.chunk.js","sourcesContent":["import { SET_CURRENT_USER } from '../actions/types'\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {}\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: Object.keys(action.payload).length !== 0,\r\n        user: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {\n  ADD_POST,\n  CLEAR_POSTS,\n  DELETE_POST,\n  GET_POST,\n  GET_POSTS,\n  POST_LOADING,\n  UPDATE_POST,\n  UPDATE_POST_ON_PAGE,\n  UPDATE_POSTS\n} from '../actions/types'\n\nconst initialState = {\n  posts: [],\n  totalCount: 0,\n  post: null,\n  isLoading: false\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case POST_LOADING:\n      return {\n        ...state,\n        isLoading: action.payload\n      }\n    case CLEAR_POSTS:\n      return {\n        ...state,\n        posts: [],\n        totalCount: 0\n      }\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: action.payload.posts,\n        totalCount: action.payload.totalCount,\n        isLoading: false\n      }\n    case GET_POST:\n      return {\n        ...state,\n        post: action.payload,\n        isLoading: false\n      }\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [action.payload, ...state.posts]\n      }\n    case UPDATE_POSTS:\n      return {\n        ...state,\n        posts: state.posts.map((p) => p._id === action.payload._id ? action.payload : p)\n      }\n    case UPDATE_POST:\n      return {\n        ...state,\n        post: action.payload\n      }\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter((post) => post._id !== action.payload)\n      }\n    case UPDATE_POST_ON_PAGE:\n      const {id, body} = action.payload;\n      const postByIndex = state.posts.findIndex((post) => post._id === id);\n      const post = state.posts[postByIndex];\n      const newPost = {\n        ...post,\n        body: body\n      }\n      return {\n        ...state,\n        posts: [...state.posts.slice(0, postByIndex), newPost, ...state.posts.slice(postByIndex + 1)]\n      }\n    default:\n      return state\n  }\n}\n","import {\r\n  SUBSCRIPTION_LOADING,\r\n  ADD_SUBSCRIPTION,\r\n  GET_SUBSCRIPTIONS,\r\n  DELETE_SUBSCRIPTION\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n  subscriptions: [],\r\n  isLoading: false\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SUBSCRIPTION_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: action.payload\r\n      }\r\n    case GET_SUBSCRIPTIONS:\r\n      return {\r\n        ...state,\r\n        subscriptions: action.payload,\r\n        isLoading: false\r\n      }\r\n    case ADD_SUBSCRIPTION:\r\n      return {\r\n        ...state,\r\n        subscriptions: [action.payload, ...state.subscriptions]\r\n      }\r\n    case DELETE_SUBSCRIPTION:\r\n      return {\r\n        ...state,\r\n        subscriptions: state.subscriptions.filter((s) => s._id !== action.payload)\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { USER_LOADING, GET_USER } from '../actions/types'\r\n\r\nconst initialState = {\r\n  user: null,\r\n  users: null,\r\n  isLoading: false\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case USER_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: action.payload\r\n      }\r\n    case GET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        isLoading: false\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\n\r\nimport auth from './auth'\r\nimport post from './post'\r\nimport subscription from './subscription'\r\nimport user from './user'\r\n\r\nexport default combineReducers({ auth, post, subscription, user })\r\n","export const SET_CURRENT_USER = 'SET_CURRENT_USER'\n\nexport const POST_LOADING = 'POST_LOADING'\nexport const ADD_POST = 'ADD_POST'\nexport const UPDATE_POST = 'UPDATE_POST'\nexport const UPDATE_POST_ON_PAGE = 'UPDATE_POST_ON_PAGE'\nexport const UPDATE_POSTS = 'UPDATE_POSTS'\nexport const GET_POSTS = 'GET_POSTS'\nexport const GET_POST = 'GET_POST'\nexport const DELETE_POST = 'DELETE_POST'\nexport const CLEAR_POSTS = 'CLEAR_POSTS'\n\nexport const SUBSCRIPTION_LOADING = 'SUBSCRIPTION_LOADING'\nexport const ADD_SUBSCRIPTION = 'ADD_SUBSCRIPTION'\nexport const GET_SUBSCRIPTIONS = 'GET_SUBSCRIPTIONS'\nexport const DELETE_SUBSCRIPTION = 'DELETE_SUBSCRIPTION'\n\nexport const USER_LOADING = 'USER_LOADING'\nexport const GET_USER = 'GET_USER'\n","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport rootReducer from './reducers'\n\nexport default createStore(rootReducer, {}, composeWithDevTools(applyMiddleware(thunk)))\n\n\n","import axios from 'axios'\r\n\r\nexport default (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common['Authorization'] = token\r\n  } else {\r\n    delete axios.defaults.headers.common['Authorization']\r\n  }\r\n}\r\n","import axios from 'axios'\r\nimport jwtDecode from 'jwt-decode'\r\n\r\nimport { SET_CURRENT_USER } from './types'\r\nimport setAuthToken from '../utils/setAuthToken'\r\n\r\nexport const register = (userData, history) => () => {\r\n  axios\r\n    .post('/api/auth/register', userData)\r\n    .then(() => history.push('/login'))\r\n}\r\n\r\nexport const login = (userData) => (dispatch) => {\r\n  axios\r\n    .post('/api/auth/login', userData)\r\n    .then((res) => {\r\n      const { token } = res.data\r\n      localStorage.setItem('access_token', token)\r\n      setAuthToken(token)\r\n      const decoded = jwtDecode(token)\r\n      dispatch(setCurrentUser(decoded))\r\n    })\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('access_token')\r\n  setAuthToken(false)\r\n  dispatch(setCurrentUser({}))\r\n}\r\n\r\nexport const setCurrentUser = (user) => ({\r\n  type: SET_CURRENT_USER,\r\n  payload: user\r\n})\r\n","import PropTypes from 'prop-types'\n\nexport const AuthTypes = PropTypes.shape({\n  isAuthenticated: PropTypes.bool.isRequired,\n  user: PropTypes.shape({\n    email: PropTypes.string.isRequired,\n    exp: PropTypes.number.isRequired, // todo: find out what is it!\n    iat: PropTypes.number.isRequired, // todo: find out what is it!\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  })\n});\n\nexport const UserTypes = PropTypes.shape({\n  createdDate: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  __v: PropTypes.number.isRequired, // todo: find out what is it!\n  _id: PropTypes.string.isRequired,\n})\nexport const PostTypes = PropTypes.shape({\n  comments: PropTypes.array,\n  likes: PropTypes.array,\n  createdDate: PropTypes.string,\n  _id: PropTypes.string.isRequired,\n  body: PropTypes.string.isRequired,\n  user: UserTypes\n})\n\n\nexport const PostsTypes = PropTypes.shape({\n  posts: PropTypes.array,\n  totalCount: PropTypes.number,\n  isLoading: PropTypes.bool,\n  post: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.object,\n  ])\n})\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport {AuthTypes} from '../../types';\nconst PrivateRoute = ({ component: Component, auth, ...restProps }) => (\n  <Route\n    {...restProps}\n    render={(props) =>\n      auth.isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n)\n\nPrivateRoute.propTypes = { auth: AuthTypes }\n\nconst mapStateToProps = (state) => ({ auth: state.auth })\n\nexport default connect(mapStateToProps)(PrivateRoute)\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n\n\nimport {AuthTypes} from '../../types';\nimport {logout} from '../../actions/auth';\n\nconst Header = (props) => {\n  const {logout} = props;\n  const {isAuthenticated, user} = props.auth;\n  const onLogout = (event) => {\n    event.preventDefault();\n    logout();\n  };\n\n  let links;\n  if (isAuthenticated) {\n    links = (\n      <li className=\"nav-item dropdown\">\n        <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\"\n           aria-haspopup=\"true\" aria-expanded=\"false\">\n          <i className=\"fa fa-user\"/>\n          Account\n        </a>\n        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n          <Link className=\"dropdown-item\" to={`/user/${user.id}`}>My Profile</Link>\n          <div className=\"dropdown-divider\"/>\n          <a\n            className=\"dropdown-item\"\n            href=\"#\"\n            onClick={onLogout}\n          >Log Out</a>\n        </div>\n      </li>\n    )\n  } else {\n    links = (\n      <React.Fragment>\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/login\">\n            <i className=\"fa fa-sign-in\"/>\n            Log In\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/register\">\n            <i className=\"fa fa-user-plus\"/>\n            Register\n          </Link>\n        </li>\n      </React.Fragment>\n    )\n  }\n  return (\n    <nav className=\"navbar navbar-icon-top navbar-expand-lg navbar-dark bg-dark\">\n      <div className=\"container\">\n        <Link className=\"navbar-brand\" to=\"/\">The Best App</Link>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n                aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"/>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/\">\n                <i className=\"fa fa-globe\"/>\n                All Posts\n              </Link>\n            </li>\n            {isAuthenticated && (\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/feed\">\n                  <i className=\"fa fa-rss\"/>\n                  Feed\n                </Link>\n              </li>\n            )}\n          </ul>\n          <ul className=\"navbar-nav\">\n            {links}\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: AuthTypes\n}\n\nconst mapStateToProps = (state) => ({auth: state.auth});\nexport {Header};\nexport default connect(mapStateToProps, {logout})(Header)\n","import React from 'react'\nimport {Link} from \"react-router-dom\";\n\nexport default () => (\n  <footer className=\"p-4 text-center\">\n    Copyright &copy; {new Date().getFullYear()} The Best App\n  </footer>\n)\n","import React from 'react';\r\n\r\n\r\nconst Input = (props) => {\r\n    const {type} = props;\r\n    return (\r\n        <input {...props} type={type} />\r\n    )\r\n}\r\n\r\n\r\nexport default Input;","import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\n\nimport {AuthTypes} from '../../types'\n\nimport Input from '../UI/input/input'\nimport {login} from '../../actions/auth'\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: ''\n    }\n  }\n\n  componentDidUpdate(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push('/')\n    };\n  };\n\n  onChange = (event) => this.setState({[event.target.name]: event.target.value});\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    this.props.login(this.state)\n  };\n\n  render() {\n    return (\n      <div className=\"row mt-4\">\n        <div className=\"col-4 mx-auto\">\n          <div className=\"card\">\n            <article className=\"card-body\">\n              <h4 className=\"card-title text-center mb-4 mt-1\">Log In</h4>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                         <span className=\"input-group-text\">\n                           <i className=\"fa fa-user\"/>\n                         </span>\n                    </div>\n\n\n                    <Input\n                      className=\"form-control\"\n                      placeholder=\"Email\"\n                      type=\"email\"\n                      name=\"email\"\n                      value={this.state.email}\n                      onChange={this.onChange}\n                      pattern=\".{4,30}\"\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"form-group\">\n                  <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                      <span className=\"input-group-text\">\n                        <i className=\"fa fa-lock\"/>\n                      </span>\n                    </div>\n                    <Input\n                      className=\"form-control\"\n                      placeholder=\"Password\"\n                      type=\"password\"\n                      name=\"password\"\n                      value={this.state.password}\n                      onChange={this.onChange}\n                      pattern=\".{4,30}\"\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"form-group\">\n                  <button type=\"submit\" className=\"btn btn-dark btn-block\">Login</button>\n                </div>\n              </form>\n            </article>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  auth: AuthTypes\n}\n\nconst mapStateToProps = (state) => ({auth: state.auth})\n\nexport default connect(mapStateToProps, {login})(Login)\n","import React,{Component} from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport {AuthTypes} from '../../types'\nimport Input from '../UI/input/input'\nimport { register } from '../../actions/auth'\n\nclass Register extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      password: ''\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('/')\n    }\n  }\n\n  onChange = (event) => this.setState({ [event.target.name]: event.target.value })\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    this.props.register(this.state, this.props.history)\n  }\n\n  render() {\n    return (\n      <div className=\"row mt-4\">\n        <div className=\"col-4 mx-auto\">\n          <div className=\"card\">\n            <article className=\"card-body\">\n              <h4 className=\"card-title text-center mb-4 mt-1\">Registration</h4>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                      <span className=\"input-group-text\">\n                        <i className=\"fa fa-user\"/>\n                      </span>\n                    </div>\n                    <Input\n                      className=\"form-control\"\n                      placeholder=\"Name\"\n                      type=\"text\"\n                      name=\"name\"\n                      value={this.state.name}\n                      onChange={this.onChange}\n                      pattern=\".{3,20}\"\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"form-group\">\n                  <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                      <span className=\"input-group-text\">\n                        <i className=\"fa fa-envelope\"/>\n                      </span>\n                    </div>\n                    <Input\n                      className=\"form-control\"\n                      placeholder=\"Email\"\n                      type=\"email\"\n                      name=\"email\"\n                      value={this.state.email}\n                      onChange={this.onChange}\n                      pattern=\".{5,30}\"\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"form-group\">\n                  <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                      <span className=\"input-group-text\">\n                        <i className=\"fa fa-lock\"/>\n                      </span>\n                    </div>\n                    <Input\n                      className=\"form-control\"\n                      placeholder=\"Password\"\n                      type=\"password\"\n                      name=\"password\"\n                      value={this.state.password}\n                      onChange={this.onChange}\n                      pattern=\".{6,30}\"\n                    />\n                  </div>\n                </div>\n                <div className=\"form-group\">\n                  <button type=\"submit\" className=\"btn btn-dark btn-block\">Register</button>\n                </div>\n              </form>\n            </article>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nRegister.propTypes = {\n  register: PropTypes.func.isRequired,\n  auth: AuthTypes\n};\n\nconst mapStateToProps = (state) => ({ auth: state.auth });\n\nexport default connect(mapStateToProps, { register })(Register);\n","import axios from 'axios'\n\nimport {\n  POST_LOADING,\n  ADD_POST,\n  GET_POSTS,\n  GET_POST,\n  DELETE_POST,\n  CLEAR_POSTS,\n  UPDATE_POST,\n  UPDATE_POST_ON_PAGE\n} from './types'\n\nexport const create = (post) => (dispatch) => {\n  axios\n    .post('/api/posts', post)\n    .then((res) => dispatch({\n      type: ADD_POST,\n      payload: res.data\n    }))\n}\nexport const update = (id, body) => (dispatch) => {\n  axios\n    .put(`/api/posts/`, {body, _id: id})\n    .then((res) => dispatch({\n      type: UPDATE_POST_ON_PAGE,\n      payload: {body, id}\n    }))\n}\n\nexport const getAll = (params) => (dispatch) => {\n  dispatch(setPostLoading(true))\n  axios\n    .get('/api/posts', {params})\n    .then((res) => dispatch({\n      type: GET_POSTS,\n      payload: {\n        posts: res.data,\n        totalCount: +res.headers['x-total-count']\n      }\n    }))\n    .catch(() => {\n      dispatch(setPostLoading(false))\n      dispatch(clearPosts())\n    })\n}\n\nexport const getById = (id) => (dispatch) => {\n  dispatch(setPostLoading(true))\n  axios\n    .get(`/api/posts/${id}`)\n    .then((res) => dispatch({\n      type: GET_POST,\n      payload: res.data\n    }))\n    .catch(() => dispatch(setPostLoading(false)))\n}\n\nexport const remove = (id) => (dispatch) => {\n  axios\n    .delete(`/api/posts/${id}`)\n    .then(() => dispatch({\n      type: DELETE_POST,\n      payload: id\n    }))\n}\n\nexport const createLike = (postId, TYPE) => (dispatch) => {\n  axios\n    .post(`/api/posts/${postId}/likes`)\n    .then((res) => dispatch({\n      type: TYPE,\n      payload: res.data\n    }))\n}\n\nexport const removeLike = (postId, likeId, TYPE) => (dispatch) => {\n  axios\n    .delete(`/api/posts/${postId}/likes/${likeId}`)\n    .then((res) => dispatch({\n      type: TYPE,\n      payload: res.data\n    }))\n}\n\nexport const createComment = (postId, comment) => (dispatch) => {\n  axios\n    .post(`/api/posts/${postId}/comments`, comment)\n    .then((res) => dispatch({\n      type: UPDATE_POST,\n      payload: res.data\n    }))\n}\n\nexport const removeComment = (postId, commentId) => (dispatch) => {\n  axios\n    .delete(`/api/posts/${postId}/comments/${commentId}`)\n    .then((res) => dispatch({\n      type: UPDATE_POST,\n      payload: res.data\n    }))\n}\n\nconst clearPosts = () => ({\n  type: CLEAR_POSTS\n})\n\nconst setPostLoading = (isLoading) => ({\n  type: POST_LOADING,\n  payload: isLoading\n})\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport Quill from 'react-quill'\nimport {AuthTypes} from '../../types';\nimport { create } from '../../actions/post'\n\nclass PostForm extends React.Component {\n\n  constructor() {\n    super();\n    this.state = { body: '' }\n  }\n\n  onChangeBody = (body) => this.setState({ body })\n\n  onSubmit = (event) => {\n    event.preventDefault()\n    this.props.create(this.state)\n    this.setState({ body: '' })\n  }\n\n  render() {\n    return (\n      <div className=\"card mb-4\">\n        <div className=\"card-body\">\n          <form onSubmit={this.onSubmit}>\n            <div className=\"form-group\">\n              <Quill\n                placeholder=\"What's up?\"\n                theme=\"snow\"\n                modules={{\n                  toolbar: [\n                    ['bold', 'italic', 'underline', 'strike'],\n                    ['link', 'image', 'video'],\n                    ['clean']\n                  ]\n                }}\n                value={this.state.body}\n                onChange={this.onChangeBody}\n              />\n            </div>\n            <div className=\"btn-group float-right\">\n              <button type=\"submit\" className=\"btn btn-dark\">Share</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nPostForm.propTypes = {\n  create: PropTypes.func.isRequired,\n  auth:AuthTypes\n}\n\nconst mapStateToProps = (state) => ({ auth: state.auth })\n\nexport default connect(mapStateToProps, { create })(PostForm)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport {AuthTypes} from '../../../types';\nimport { createLike, removeLike } from '../../../actions/post'\n\nclass Like extends React.Component {\n\n  onLikeClick = (event) => {\n    event.preventDefault()\n    const { auth, postId, likes, TYPE } = this.props\n    if (auth.isAuthenticated) {\n      const existedLike = likes.find((like) => like.user === auth.user.id)\n      if (existedLike) {\n        this.props.removeLike(postId, existedLike._id, TYPE)\n      } else {\n        this.props.createLike(postId, TYPE)\n      }\n    }\n  }\n\n  render() {\n    const { likes } = this.props;\n    return (\n      <a\n        href=\"#\" role=\"button\"\n        className=\"card-link\" onClick={this.onLikeClick}\n      >\n        <i className=\"fa fa-heart\"/> {likes.length}\n      </a>\n    )\n  }\n}\n\nLike.propTypes = {\n  createLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  auth: AuthTypes,\n  postId: PropTypes.string.isRequired,\n  likes: PropTypes.array.isRequired,\n  TYPE: PropTypes.string.isRequired\n}\n\nconst mapStateToProps = (state) => ({ auth: state.auth })\n\nexport default connect(mapStateToProps, { createLike, removeLike })(Like)\n","import React from 'react'\nimport md5 from 'js-md5'\n\nexport default ({user, width = ''}) => {\n  const randomColor = Math.floor(Math.random() * 255 * 255 * 255).toString(16);\n  return (\n    <img\n      src={`https://gravatar.com/avatar/${md5(user.name)}`}\n      className=\"rounded-circle\"\n      alt={user.name}\n      width={width}\n    />\n  )\n}\n","export const removeInjection = (text) =>{\n  return text.replace(/script|\\/script/g, '');\n}\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {AuthTypes} from '../../../types';\nimport {remove, update} from '../../../actions/post';\nimport Like from './Like';\nimport ProfileImage from '../ProfileImage';\nimport Input from \"../../UI/input/input\";\nimport {removeInjection} from '../../../utils/index';\nclass Post extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isChange: false,\n      newPostText: ''\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.post.body !== this.props.post.body) {\n      this.refs.body.innerHTML = removeInjection(this.props.post.body);\n    }\n\n  }\n\n  componentDidMount() {\n    this.refs.body.innerHTML = removeInjection(this.props.post.body);\n  }\n\n  onDelete = () => {\n    if (window.confirm('Are you sure?')) {\n      this.props.remove(this.props.post._id)\n    }\n  };\n  onChangePost = () => {\n    this.setState((prevState) => ({\n      isChange: !prevState.isChange\n    }))\n  };\n  onCheckInjection = (text) =>{\n\n  }\n  onSubmitPost = (event) => {\n    event.preventDefault();\n    const {update, post: {_id}} = this.props;\n    const {newPostText} = this.state;\n    update(_id, newPostText);\n    this.onChangePost()\n  }\n\n  onChangeInput = (event) => {\n    this.setState({newPostText: event.target.value})\n  };\n\n  render() {\n    const {post, auth, TYPE} = this.props;\n    const {isChange, newPostText} = this.state;\n\n    const isAuthAndOwn = auth.isAuthenticated && auth.user.name === post.user.name;\n    const date = new Date(post.createdDate).toDateString();\n    return (\n      <div className=\"card mb-4\">\n        <div className=\"card-header\">\n          <div className=\"d-flex justify-content-between align-items-center\">\n            <div className=\"d-flex justify-content-between align-items-center\">\n              <div className=\"mr-2\">\n                <Link to={`/user/${post.user._id}`}>\n                  <ProfileImage user={post.user} width=\"50\"/>\n                </Link>\n              </div>\n              <div className=\"ml-2\">\n                <div className=\"h5 m-0\">{post.user.name}</div>\n                <div className=\"h7 text-muted\">\n                  <i className=\"fa fa-clock-o\"/> {date}\n                </div>\n              </div>\n            </div>\n            {isAuthAndOwn && (\n              <div className=\"dropdown\">\n                <button className=\"btn btn-link dropdown-toggle\" type=\"button\" id=\"drop\"\n                        data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"/>\n                <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"drop\">\n                  {/*todo: add update post */}\n                  <a className=\"dropdown-item\" role=\"button\" onClick={this.onDelete}>Remove</a>\n                  <a className=\"dropdown-item\" role=\"button\" onClick={this.onChangePost}>Change</a>\n                </div>\n                {isChange &&\n                (\n                  <React.Fragment>\n                    <button onClick={this.onChangePost}>X</button>\n                      <form onSubmit={this.onSubmitPost}>\n                        <Input type='text' value={newPostText} onChange={this.onChangeInput}/>\n                      </form>\n                  </React.Fragment>\n                  )\n                }\n              </div>\n            )}\n          </div>\n        </div>\n        <div className=\"card-body\" ref=\"body\"/>\n        <div className=\"card-footer\">\n          <Like postId={post._id} likes={post.likes} TYPE={TYPE}/>\n          <Link to={`/post/${post._id}`} className=\"card-link\">\n            <i className=\"fa fa-arrow-right\"/>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nPost.propTypes = {\n  remove: PropTypes.func.isRequired,\n  post: PropTypes.shape({\n    comments: PropTypes.array,\n    likes: PropTypes.array,\n    createdDate: PropTypes.string.isRequired,\n    _id: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired,\n    user: PropTypes.shape({\n      createdDate: PropTypes.string.isRequired,\n      email: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      __v: PropTypes.number.isRequired, // todo: find out what is it!\n      _id: PropTypes.string.isRequired,\n    })\n  }),\n  auth: AuthTypes,\n  TYPE: PropTypes.string.isRequired\n}\n\nconst mapStateToProps = (state) => ({auth: state.auth});\n\nexport default connect(mapStateToProps, {remove, update})(Post)\n","import Post from './Post'\r\n\r\nexport default Post\r\n","import Loader from './Loader'\r\n\r\nexport default Loader\r\n","import React from 'react'\r\n\r\nimport './Loader.css'\r\n\r\nexport default () => (\r\n  <div id=\"fountainG\" className=\"mt-4\">\r\n    <div id=\"fountainG_1\" className=\"fountainG\"></div>\r\n    <div id=\"fountainG_2\" className=\"fountainG\"></div>\r\n    <div id=\"fountainG_3\" className=\"fountainG\"></div>\r\n    <div id=\"fountainG_4\" className=\"fountainG\"></div>\r\n    <div id=\"fountainG_5\" className=\"fountainG\"></div>\r\n    <div id=\"fountainG_6\" className=\"fountainG\"></div>\r\n    <div id=\"fountainG_7\" className=\"fountainG\"></div>\r\n    <div id=\"fountainG_8\" className=\"fountainG\"></div>\r\n  </div>\r\n)\r\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport PropTypes from 'prop-types'\nimport Pagination from \"react-js-pagination\"\nimport {AuthTypes, PostsTypes} from '../../types';\nimport {UPDATE_POSTS} from '../../actions/types'\nimport {getAll} from '../../actions/post'\n\nimport Post from './Post'\nimport Loader from './Loader'\n\nconst LIMIT = 10\n\nclass Posts extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {activePage: 1}\n  }\n\n  componentDidMount() {\n    this.props.getAll(this.getQueryParams())\n  }\n\n  onPageChange = (activePage) => {\n    this.setState({activePage}, () => {\n      this.props.getAll(this.getQueryParams())\n    })\n  }\n\n  getQueryParams() {\n    return Object.assign(\n      {\n        skip: (this.state.activePage - 1) * LIMIT,\n        limit: LIMIT\n      },\n      this.props.queryParams\n    )\n  }\n\n  render() {\n    const {isLoading, posts, totalCount} = this.props.post;\n    return (\n      <React.Fragment>\n        {isLoading && <Loader/>}\n        {!isLoading && totalCount === 0 && (\n          <div className=\"text-center\">\n            <h2>There is nothing</h2>\n          </div>\n        )}\n        {posts.map((p) => <Post post={p} key={p._id} TYPE={UPDATE_POSTS}/>)}\n        {!isLoading && totalCount > posts.length && (\n          <Pagination\n            activePage={this.state.activePage}\n            itemsCountPerPage={LIMIT}\n            totalItemsCount={totalCount}\n            onChange={this.onPageChange}\n            itemClass=\"page-item\"\n            linkClass=\"page-link\"\n          />\n        )}\n      </React.Fragment>\n    )\n  }\n}\n\nPosts.propTypes = {\n  getAll: PropTypes.func.isRequired,\n  post:PostsTypes,\n  auth: AuthTypes,\n  queryParams: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  post: state.post,\n  auth: state.auth\n})\n\nexport default connect(mapStateToProps, {getAll})(Posts)\n","import React,{Component} from 'react'\nimport { connect } from 'react-redux'\nimport {AuthTypes} from '../../types'\nimport PostForm from '../shared/PostForm'\nimport Posts from '../shared/Posts'\n\nclass AllPosts extends Component {\n\n  render() {\n    const { auth } = this.props;\n    return (\n      <div className=\"row mt-4\">\n        <div className=\"col-md-6 mx-auto\">\n          {auth.isAuthenticated && <PostForm />}\n          <Posts queryParams={{}} />\n        </div>\n      </div>\n    )\n  }\n}\n\nAllPosts.propTypes = {\n  auth: AuthTypes\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(AllPosts)\n","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport PropTypes from 'prop-types'\nimport {removeInjection} from '../../utils/index'\nimport {removeComment} from '../../actions/post'\nimport {AuthTypes} from '../../types';\nimport ProfileImage from '../shared/ProfileImage'\n\nclass Comment extends Component {\n\n  componentDidMount() {\n    this.refs.body.innerHTML = removeInjection(this.props.comment.body)\n  }\n\n  onDelete = () => {\n    const {removeComment, postId, comment} = this.prors;\n    removeComment(postId, comment._id)\n  };\n\n  render() {\n    const {comment, auth} = this.props;\n    return (\n      <div className=\"card mb-3\">\n        <div className=\"card-body\">\n          <div className=\"row\">\n            <div className=\"col-md-10\">\n              <div className=\"d-flex justify-content-between align-items-center\">\n                <div className=\"d-flex justify-content-between align-items-center\">\n                  <div className=\"mr-2\">\n                    <ProfileImage user={comment.user} width=\"50\"/>\n                  </div>\n                  <div className=\"ml-2\">\n                    <div className=\"h5 m-0\">{comment.user.name}</div>\n                    <div className=\"h7 text-muted\">\n                      <i className=\"fa fa-clock-o\"/> {new Date(comment.createdDate).toDateString()}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-2 text-right\">\n              {auth.isAuthenticated && auth.user.name === comment.user.name && (\n                <div className=\"dropdown\">\n                  <button className=\"btn btn-link dropdown-toggle\" type=\"button\" id=\"drop\" data-toggle=\"dropdown\"\n                          aria-haspopup=\"true\" aria-expanded=\"false\"></button>\n                  <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"drop\">\n                    <a className=\"dropdown-item\" role=\"button\" onClick={this.onDelete}>Remove</a>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n          <hr/>\n          <div className=\"row\">\n            <div className=\"col-md-12\" ref=\"body\"></div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nComment.propTypes = {\n  removeComment: PropTypes.func.isRequired,\n  comment: PropTypes.object.isRequired,\n  postId: PropTypes.string.isRequired,\n  auth: AuthTypes\n}\n\nconst mapStateToProps = (state) => ({auth: state.auth})\n\nexport default connect(mapStateToProps, {removeComment})(Comment)\n","import React,{Component} from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport Quill from 'react-quill'\nimport {AuthTypes} from '../../types';\nimport { createComment } from '../../actions/post'\n\nclass CommentForm extends Component {\n\n  constructor() {\n    super()\n    this.state = { body: '' }\n  }\n\n  onChangeBody = (body) => this.setState({ body })\n\n  onSubmit = (event) => {\n    event.preventDefault()\n    const { body } = this.state\n    this.props.createComment(this.props.postId, { body })\n    this.setState({ body: '' })\n  }\n\n  render() {\n    return (\n      <div className=\"card mb-4\">\n        <div className=\"card-body\">\n          <form onSubmit={this.onSubmit}>\n            <div className=\"form-group\">\n              <Quill\n                placeholder=\"What do you think?\"\n                theme=\"snow\"\n                modules={{ toolbar: false }}\n                value={this.state.body}\n                onChange={this.onChangeBody}\n              />\n            </div>\n            <div className=\"btn-group\">\n              <button type=\"submit\" className=\"btn btn-dark\">Comment</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nCommentForm.propTypes = {\n  createComment: PropTypes.func.isRequired,\n  auth: AuthTypes,\n  postId: PropTypes.string.isRequired\n}\n\nconst mapStateToProps = (state) => ({ auth: state.auth })\n\nexport default connect(mapStateToProps, { createComment })(CommentForm)\n","import React,{Component} from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport { UPDATE_POST } from '../../actions/types'\nimport { getById as getPostById } from '../../actions/post'\n\nimport Loader from '../shared/Loader'\nimport Post from '../shared/Post'\nimport Comment from './Comment'\nimport CommentForm from './CommentForm'\nimport {AuthTypes,PostsTypes} from '../../types';\n\n\nclass SinglePost extends Component {\n\n  componentDidMount() {\n    this.props.getPostById(this.props.match.params.id)\n  }\n\n  componentDidUpdate(nextProps) {\n    // if (!nextProps.post.isLoading && nextProps.post.post === null) {\n    //   this.props.history.push('/404')\n    // }\n  }\n\n  render() {\n    const { auth, post } = this.props;\n    console.log( this.props)\n    return !post.isLoading && post.post !== null ? (\n      <div className=\"row mt-5\">\n        <div className=\"col-md-6 mx-auto\">\n          <Post post={post.post} TYPE={UPDATE_POST} />\n          <div className=\"col-md-12 mx-auto\">\n            {auth.isAuthenticated && <CommentForm postId={post.post._id} />}\n            {post.post.comments.map((c) => (\n              <Comment comment={c} postId={post.post._id} key={c._id} />\n            ))}\n          </div>\n        </div>\n      </div>\n    ) : <Loader />\n  }\n}\n\nSinglePost.propTypes = {\n  getPostById: PropTypes.func.isRequired,\n  post: PostsTypes,\n  auth: AuthTypes\n}\n\nconst mapStateToProps = (state) => ({\n  post: state.post,\n  auth: state.auth\n})\n\nexport default connect(mapStateToProps, { getPostById })(SinglePost)\n","import axios from 'axios'\r\n\r\nimport { GET_USER, USER_LOADING } from './types'\r\n\r\nexport const getUserById = (id) => (dispatch) => {\r\n  dispatch(setUserLoading(true))\r\n  axios\r\n    .get(`/api/users/${id}`)\r\n    .then((res) => dispatch({\r\n      type: GET_USER,\r\n      payload: res.data\r\n    }))\r\n    .catch(() => dispatch(setUserLoading(false)))\r\n}\r\n\r\nconst setUserLoading = (isLoading) => ({\r\n  type: USER_LOADING,\r\n  payload: isLoading\r\n})\r\n","import axios from 'axios'\r\n\r\nimport {\r\n  SUBSCRIPTION_LOADING,\r\n  ADD_SUBSCRIPTION,\r\n  GET_SUBSCRIPTIONS,\r\n  DELETE_SUBSCRIPTION\r\n} from './types'\r\n\r\nexport const create = (like) => (dispatch) => {\r\n  axios\r\n    .post('/api/subscriptions', like)\r\n    .then((res) => dispatch({\r\n      type: ADD_SUBSCRIPTION,\r\n      payload: res.data\r\n    }))\r\n}\r\n\r\nexport const getAll = (params = {}) => (dispatch) => {\r\n  dispatch(setSubscriptionLoading(true))\r\n  axios\r\n    .get('/api/subscriptions', { params })\r\n    .then((res) => dispatch({\r\n      type: GET_SUBSCRIPTIONS,\r\n      payload: res.data\r\n    }))\r\n    .catch(() => dispatch(setSubscriptionLoading(false)))\r\n}\r\n\r\nexport const remove = (id) => (dispatch) => {\r\n  axios\r\n    .delete(`/api/subscriptions/${id}`)\r\n    .then(() => dispatch({\r\n      type: DELETE_SUBSCRIPTION,\r\n      payload: id\r\n    }))\r\n}\r\n\r\nexport const setSubscriptionLoading = (isLoading) => ({\r\n  type: SUBSCRIPTION_LOADING,\r\n  payload: isLoading\r\n})\r\n","import React,{Component} from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { withRouter } from 'react-router-dom'\nimport {AuthTypes} from '../../types';\nimport { create, getAll, remove } from '../../actions/subscription'\n\nclass Subscription extends Component {\n\n  componentDidMount() {\n    this.props.getAll({ profile: this.props.userId })\n  }\n\n  onSubClick = (event) => {\n    event.preventDefault()\n    const { subscription: { subscriptions }, auth, userId } = this.props\n    if (!auth.isAuthenticated) {\n      this.props.history.push('/login')\n    } else {\n      const existedSub = subscriptions.find((s) => s.subscriber === auth.user.id)\n      if (existedSub) {\n        this.props.remove(existedSub._id)\n      } else {\n        this.props.create({ profile: userId })\n      }\n    }\n  }\n\n  render() {\n    const { subscriptions, isLoading } = this.props.subscription\n    return !isLoading && (\n      <button\n        className=\"btn btn-dark btn-block subscribe-btn\"\n        onClick={this.onSubClick}\n      >\n        Subscribe | <i className=\"fa fa-users\"></i> {subscriptions.length}\n      </button>\n    )\n  }\n}\n\nSubscription.propTypes = {\n  create: PropTypes.func.isRequired,\n  getAll: PropTypes.func.isRequired,\n  remove: PropTypes.func.isRequired,\n  auth: AuthTypes,\n  subscription: PropTypes.object.isRequired,\n  userId: PropTypes.string.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  subscription: state.subscription\n})\n\nexport default connect(mapStateToProps, {\n  create, getAll, remove\n})(withRouter(Subscription))\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport { getUserById } from '../../actions/user'\nimport Loader from '../shared/Loader'\nimport PostForm from '../shared/PostForm'\nimport Posts from '../shared/Posts'\nimport ProfileImage from '../shared/ProfileImage'\nimport Subscription from './Subscription'\nimport {AuthTypes, UserTypes} from \"../../types\";\n\nclass UserProfile extends React.Component {\n\n  componentDidMount() {\n    this.props.getUserById(this.props.match.params.id)\n  }\n\n  componentDidUpdate(nextProps) {\n    // if (!nextProps.user.isLoading && nextProps.user.user === null) {\n    //   this.props.history.push('/404')\n    // }\n  }\n\n  render() {\n    const { user: { user, isLoading }, auth } = this.props;\n    return !isLoading && user !== null ? (\n      <React.Fragment>\n        <div className=\"row mt-5\">\n          <div className=\"col-md-6 mx-auto\">\n            <div className=\"row\">\n              <div className=\"col-8\">\n                <h2 className=\"profile-username\">{user.name}</h2>\n                <p>\n                  <strong>Registered: </strong>\n                  {new Date(user.createdDate).toDateString()}\n                </p>\n              </div>\n              <div className=\"col-4 text-center\">\n                <ProfileImage user={user} />\n              </div>\n            </div>\n          </div>\n        </div>\n        {!(auth.user.id === user._id) && (\n          <div className=\"row mt-4\">\n            <div className=\"col-md-12 text-center\">\n              <div className=\"col-4 mx-auto\">\n                <Subscription userId={user._id} />\n              </div>\n            </div>\n          </div>\n        )}\n        <div className=\"row mt-4\">\n          <div className=\"col-md-6 mx-auto\">\n            {auth.user.id === user._id && <PostForm />}\n            <Posts queryParams={{ user: user._id }} />\n          </div>\n        </div>\n      </React.Fragment>\n    ) : <Loader />\n  }\n}\n\nUserProfile.propTypes = {\n  getUserById: PropTypes.func.isRequired,\n  user: PropTypes.shape({\n    users: PropTypes.oneOfType([\n      PropTypes.array,\n      PropTypes.number\n    ]),\n    isLoading: PropTypes.bool,\n    user: UserTypes\n  }),\n  auth: AuthTypes\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  auth: state.auth\n})\n\nexport default connect(mapStateToProps, { getUserById })(UserProfile)\n","import React,{Component} from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport {AuthTypes} from '../../types'\nimport { getAll as getAllSubscriptions } from '../../actions/subscription'\nimport Loader from '../shared/Loader'\nimport Posts from '../shared/Posts'\n\nclass Feed extends Component {\n\n  componentDidMount() {\n    this.props.getAllSubscriptions({\n      subscriber: this.props.auth.user.id\n    })\n  }\n\n  render() {\n    const { isLoading, subscriptions } = this.props.subscription;\n    console.log(subscriptions)\n    return !isLoading ? (\n      <div className=\"row mt-4\">\n        <div className=\"col-md-6 mx-auto\">\n          {subscriptions.length !== 0 ? (\n            <Posts queryParams={{\n              users: subscriptions.map((s) => s.profile).join(',')\n            }} />\n          ) : (\n            <div className=\"text-center\">\n              <h2>You have no subscriptions</h2>\n            </div>\n          )}\n        </div>\n      </div>\n    ) : <Loader />\n  }\n}\n\nFeed.propTypes = {\n  getAllSubscriptions: PropTypes.func.isRequired,\n  subscription: PropTypes.object.isRequired,\n  auth: AuthTypes\n}\n\nconst mapStateToProps = (state) => ({\n  subscription: state.subscription,\n  auth: state.auth\n})\n\nexport default connect(mapStateToProps, { getAllSubscriptions })(Feed)\n","import React from 'react'\r\n\r\nexport default () => (\r\n  <div className=\"text-center mt-5\">\r\n    <h1>Page Not Found</h1>\r\n  </div>\r\n)\r\n","import React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport jwtDecode from 'jwt-decode'\n\nimport store from './store'\nimport setAuthToken from './utils/setAuthToken'\n\nimport { setCurrentUser, logout } from './actions/auth'\n\nimport PrivateRoute from './components/shared/PrivateRoute'\nimport Header from './components/layout/Header'\nimport Footer from './components/layout/Footer'\nimport Login from './components/auth/Login'\nimport Register from './components/auth/Register'\nimport AllPosts from './components/all-posts/AllPosts'\nimport SinglePost from './components/single-post/SinglePost'\nimport UserProfile from './components/user-profile/UserProifle'\nimport Feed from './components/feed/Feed'\nimport NotFound from './components/not-found/NotFound'\n\nif (window.localStorage.access_token) {\n  const { access_token } = window.localStorage\n  setAuthToken(access_token)\n  const decoded = jwtDecode(access_token)\n  store.dispatch(setCurrentUser(decoded))\n  const currentTime = Date.now() / 1000\n  if (decoded.exp < currentTime) {\n    store.dispatch(logout())\n    window.location.href = '/login'\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <React.Fragment>\n          <Header />\n          <div className=\"container\">\n            <Route path=\"/register\" component={Register} />\n            <Route path=\"/login\" component={Login} />\n            <Route exact path=\"/\" component={AllPosts} />\n            <Route path=\"/post/:id\" component={SinglePost} />\n            <Route path=\"/user/:id\" component={UserProfile} />\n            <Switch>\n              <PrivateRoute path=\"/feed\" component={Feed} />\n            </Switch>\n            <Route path=\"/404\" component={NotFound} />\n          </div>\n          <Footer />\n        </React.Fragment>\n      </BrowserRouter>\n    </Provider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css'\r\nimport 'bootstrap/dist/js/bootstrap.js'\r\nimport 'font-awesome/css/font-awesome.min.css'\r\nimport 'react-quill/dist/quill.snow.css'\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}